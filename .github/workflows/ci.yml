name: QA Pipeline

permissions:
  contents: read
  issues: write

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    services:
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker Compose Selenium Grid
        run: |
          docker-compose up -d

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov jsonschema

      - name: Run functional tests
        run: |
          pytest tests/functional --cov=./ --cov-report=xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Install k6
        run: |
          curl -fsSL https://dl.k6.io/key.gpg | sudo gpg --dearmor -o /usr/share/keyrings/k6-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install -y k6

      - name: Run all k6 performance tests
        working-directory: ./tests/performance
        run: |
          for script in *.js; do
            echo "Running $script"
            k6 run "$script"
          done

      - name: Set up OWASP ZAP (for security tests)
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: "https://jsonplaceholder.typicode.com"
          cmd_options: "-r zap_full_report.html"

      - name: Upload ZAP security report
        uses: actions/upload-artifact@v4
        with:
          name: zap-security-report
          path: reports/security/zap_full_report.html

      - name: Run Selenium tests with Allure using Selenium Grid
        env:
          USE_SELENIUM_GRID: true
        run: |
          pytest tests/functional/selenium_tests/ --maxfail=0 --disable-warnings -v --alluredir=allure-results/selenium

      - name: Tear down Docker Compose Selenium Grid
        if: always()
        run: docker-compose down

      - name: Install Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre
          curl -o allure-2.21.0.zip -L https://github.com/allure-framework/allure2/releases/download/2.21.0/allure-2.21.0.zip
          unzip -o allure-2.21.0.zip -d /opt/
        env:
          PATH: ${{ env.PATH }}:/opt/allure-2.21.0/bin

      - name: Generate Allure report
        run: |
          allure generate allure-results/selenium -o allure-results/selenium-report

      - name: Upload Allure report
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-results/selenium-report
